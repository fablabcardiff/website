# NON-SSL
server {
	listen 80 default_server;
	listen [::]:80;

        server_name fablabcardiff.com www.fablabcardiff.com fablabcardiff.co.uk www.fablabcardiff.co.uk;

	root /var/www/fablab/site;
	index index.html index.htm;

	location ~ /.well-known {
		allow all;
	}

	return 301 https://fablabcardiff.com$request_uri;
}

server {
        listen 443 ssl;

        server_name fablabcardiff.co.uk www.fablabcardiff.co.uk;

        ssl_certificate /etc/letsencrypt/live/fablabcardiff.co.uk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fablabcardiff.co.uk/privkey.pem;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        ssl_dhparam /etc/ssl/certs/dhparam.pem;

	return 301 https://fablabcardiff.com$request_uri;
}

server {
        listen 443 ssl;

        server_name fablabcardiff.com www.fablabcardiff.com;

        ssl_certificate /etc/letsencrypt/live/fablabcardiff.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/fablabcardiff.com/privkey.pem;

        ########################################################################
        # from https://cipherli.st/                                            #
        # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html #
        ########################################################################

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        # Disable preloading HSTS for now.  You can use the commented out header line that includes
        # the "preload" directive if you understand the implications.
        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        ##################################
        # END https://cipherli.st/ BLOCK #
        ##################################

        ssl_dhparam /etc/ssl/certs/dhparam.pem;

        location ~ /.well-known {
                allow all;
        }

	root /var/www/fablab/site;
	index index.html index.htm;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

	}

	location ~ \.(js|css|png|jpg|jpeg|gif|ico|html|woff|woff2|ttf|svg|eot|otf)$ {
	    add_header "Access-Control-Allow-Origin" "*";
	    expires 1M;
	    access_log off;
	    add_header Cache-Control "public";
	}
}
